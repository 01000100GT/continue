import { fixDoubleDollarNewLineLatex } from "./fixDoubleDollarLatex"; // Adjust the import based on your file structure

/*
    These tests are generated by claude sonnet, audit if failing.
*/
describe("fixDoubleDollarNewLineLatex", () => {
  it("replaces newlined $$ delimiters for a single LaTeX block", () => {
    const input = `
    Here is some text.

    $$
    f(x) = ax^2 + bx + c
    $$

    End of text.
    `;
    const expectedOutput = `
    Here is some text.

    $$f(x) = ax^2 + bx + c$$

    End of text.
    `;
    expect(fixDoubleDollarNewLineLatex(input)).toBe(expectedOutput);
  });

  it("does not modify text without LaTeX blocks", () => {
    const input = `
    This is a simple text block.
    `;
    const expectedOutput = `
    This is a simple text block.
    `;
    expect(fixDoubleDollarNewLineLatex(input)).toBe(expectedOutput);
  });

  it("does not replace single $ delimiters", () => {
    const input = `
    Price is $100.
    `;
    const expectedOutput = `
    Price is $100.
    `;
    expect(fixDoubleDollarNewLineLatex(input)).toBe(expectedOutput);
  });

  it("processes multiple LaTeX blocks separately", () => {
    const input = `
    $$\nE = mc^2\n$$
    
    Some text.

    $$\na^2 + b^2 = c^2\n$$
    `;
    const expectedOutput = `
    $$E = mc^2$$
    
    Some text.

    $$a^2 + b^2 = c^2$$
    `;
    expect(fixDoubleDollarNewLineLatex(input)).toBe(expectedOutput);
  });

  it("leaves inline $$ delimiters untouched", () => {
    const input = `
    You earned $$1,000 today.
    `;
    const expectedOutput = `
    You earned $$1,000 today.
    `;
    expect(fixDoubleDollarNewLineLatex(input)).toBe(expectedOutput);
  });

  it("handles no LaTeX correctly", () => {
    const input = `Just a regular string, nothing fancy.`;
    const expectedOutput = `Just a regular string, nothing fancy.`;
    expect(fixDoubleDollarNewLineLatex(input)).toBe(expectedOutput);
  });

  it("ignores malformed LaTeX that lacks newlines", () => {
    const input = `
    $$f(x) = ax^2 + bx + c$$
    `;
    const expectedOutput = `
    $$f(x) = ax^2 + bx + c$$
    `;
    expect(fixDoubleDollarNewLineLatex(input)).toBe(expectedOutput);
  });

  it("keeps text spacing unchanged except for newline removal", () => {
    const input = `
    Start

    $$\nA = \pi r^2\n$$

    End
    `;
    const expectedOutput = `
    Start

    $$A = \pi r^2$$

    End
    `;
    expect(fixDoubleDollarNewLineLatex(input)).toBe(expectedOutput);
  });

  it("works with a completely empty string", () => {
    const input = "";
    const expectedOutput = "";
    expect(fixDoubleDollarNewLineLatex(input)).toBe(expectedOutput);
  });

  it("ignores non-matching but similar text", () => {
    const input = `
    Look at this: $$$Profit$$$
    `;
    const expectedOutput = `
    Look at this: $$$Profit$$$
    `;
    expect(fixDoubleDollarNewLineLatex(input)).toBe(expectedOutput);
  });
});
